Permutation Printing
You are given a string str.

Complete the body of permutationPrint function - without changing signature - to calculate and print all permutations of str.

Use sample input and output to take idea about permutations.

Note

The online judge can't force you to write the function recursively but that is what the spirit of question is. Write recursive and not iterative logic. The purpose of the question is to aid learning recursion and not test you.

Input Format
The first line of input contains a string str.

Output Format
Print all the permutations of the given string.

Example 1
Input

abc
Output

abc
acb
bac
bca
cab
cba
Explanation

The given string abc has 6 permutations, abc,acb,bac,bca,cab,cba.

Example 2
Input

ab
Output

ab
ba
Explanation

The given string ab has 2 permutations ab and ba.

Constraints
1 <= |str| <= 5
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
import java.util.*;
  
public class Main{
  
   public static void main(String[] args) {
      Scanner scn = new Scanner(System.in);
      String s=scn.nextLine();
      String asf="";
      permutationPrint(s,asf);
   }
   public static void permutationPrint(String ques, String asf)
    {
        // your code here
		if(ques.length() == 0){
			System.out.println(asf);
			return;
		}
		for(int i = 0;i<ques.length();i++)
			{
				char ch = ques.charAt(i);
				String newq = ques.substring(0,i)+ques.substring(i+1);
				String newaf = asf+ch;
				permutationPrint(newq, newaf);
				
			}
    }
  }
